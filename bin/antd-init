#!/usr/bin/env node

var vfs = require('vinyl-fs');
var fs = require('fs');
var through = require('through2');
var path = require('path');
var join = path.join;
var basename = path.basename;
var argv = process.argv;
var simplifyFilename = require('../lib/util').simplifyFilename;

function printHelpInfo() {
  console.log('antd-init v' + require('../package').version);
  console.log();
  console.log('Commands:');
  console.log();
  console.log('antd-init -v');
  console.log('antd-init -h');
  console.log('antd-init');
  printGenerateInfo();
}

function printGenerateInfo() {
  console.log('antd-init generate route users');
  console.log('antd-init generate component UserList');
  console.log('antd-init generate component UserList/UserItem');
  console.log('antd-init generate saga users');
  console.log('antd-init generate reducer users');
  console.log('antd-init generate service users');
}

if (argv.length === 3 && ['-v', '--version'].indexOf(argv[2]) > -1) {
  console.log(require('../package').version);
  return;
}

if (argv.length === 3 && ['-h', '--help', 'help'].indexOf(argv[2]) > -1) {
  printHelpInfo();
}

// antd-init g route user
if (['g', 'generate'].indexOf(argv[2]) > -1) {
  if (argv.length !== 5) {
    console.error('generate error');
    console.log('examples: ');
    printGenerateInfo();
    return;
  }
  require('../lib/generate')(argv[3], argv[4]);
  return;
}

// antd-init -d
// antd-init --demo
if (argv.length === 3 && ['--demo'].indexOf(argv[2]) > -1) {
  init('demo');
  return;
}

// antd-init
if (argv.length === 2) {
  init('redux');
}

function init(type) {
  var cwd = join(__dirname, '../boilerplates', type);
  var dest = process.cwd();

  vfs.src(['**/*', '!node_modules/**/*'], {cwd: cwd, cwdbase: true, dot: true})
    .pipe(template(dest))
    .pipe(vfs.dest(dest))
    .on('end', function() {
      fs.renameSync(path.join(dest,'gitignore'),path.join(dest,'.gitignore'));
      require('../lib/install');
    })
    .resume();
}

function template(dest) {
  return through.obj(function (file, enc, cb) {
    if (!file.stat.isFile()) {
      return cb();
    }

    console.log('Write %s', simplifyFilename(join(dest, basename(file.path))));
    this.push(file);
    cb();
  });
}
